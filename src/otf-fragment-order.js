// Generated by CoffeeScript 1.8.0

/*
  otf-fragment-order.coffee
  http://www.waxam.be
  MIT Licensed

  Copyright (C) 2015 Maarten Schroeven <maarten@waxam.be>
 */

(function() {
  var CURRENT_INDEX, addDataAttributes, config, showFragment, toggleKeyListener;

  CURRENT_INDEX = -1;

  showFragment = function(event) {
    var currentSlide, fragment, index, otherFragment, _ref;
    if ((48 <= (_ref = event.keyCode) && _ref <= 57)) {
      index = event.keyCode - 48;
      if (index === 0) {
        index = 10;
      }
      currentSlide = Reveal.getCurrentSlide();
      fragment = currentSlide.querySelector(".fragment[data-otf-fragment-order-index=\"" + index + "\"]");
      if ((fragment != null ? fragment.className.indexOf('visible') : void 0) === -1) {
        CURRENT_INDEX++;
        otherFragment = currentSlide.querySelector(".fragment[data-fragment-index=\"" + CURRENT_INDEX + "\"]");
        if (otherFragment != null) {
          otherFragment.setAttribute('data-fragment-index', fragment.getAttribute('data-fragment-index'));
          fragment.setAttribute('data-fragment-index', CURRENT_INDEX);
          return Reveal.nextFragment();
        }
      }
    }
  };

  toggleKeyListener = function() {
    var currentSlide;
    currentSlide = Reveal.getCurrentSlide();
    if (currentSlide != null ? currentSlide.hasAttribute('data-otf-fragment-order-slide') : void 0) {
      CURRENT_INDEX = -1;
      return document.addEventListener('keydown', showFragment);
    } else {
      return document.removeEventListener('keydown', showFragment);
    }
  };

  addDataAttributes = function() {
    var fragments;
    fragments = Array.prototype.slice.call(document.querySelectorAll('section[data-otf-fragment-order-slide] .fragment'));
    return fragments.forEach(function(fragment) {
      return fragment.setAttribute('data-otf-fragment-order-index', parseInt(fragment.getAttribute('data-fragment-index')) + 1);
    });
  };

  config = Reveal.getConfig();

  if (((config != null ? config.otfFragmentOrder : void 0) != null) === true) {
    addDataAttributes();
    toggleKeyListener();
    Reveal.addEventListener('slidechanged', function(evt) {
      if ((evt.previousSlide == null) || evt.previousSlide.className.indexOf('past' > -1)) {
        return toggleKeyListener();
      }
    });
  }

}).call(this);

//# sourceMappingURL=otf-fragment-order.js.map
